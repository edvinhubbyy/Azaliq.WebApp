@model Azaliq.ViewModels.CartItems.CartInputViewModel
@using Azaliq.Data.Models.Models.Enum
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Checkout";

    var countryCodeList = new SelectList(
        Enum.GetValues(typeof(CountryCode))
        .Cast<CountryCode>()
        .Select(cc => new
        {
            Id = (int)cc,
            Name = $"{cc} (+{(int)cc})"
        }), "Id", "Name", (int)Model.CountryCode);

    var deliveryOptionList = new SelectList(
        Enum.GetValues(typeof(DeliveryOptions))
        .Cast<DeliveryOptions>()
        .Select(d => new
        {
            Name = d.ToString(),
            Value = (int)d
        }),
        "Value",
        "Name",
        Model.DeliveryOption.HasValue ? (int)Model.DeliveryOption.Value : (int?)null);

    var storeList = new SelectList(Model.Stores, "Id", "DisplayName", Model.PickupStoreId);
}

<h2 class="mb-4">@ViewData["Title"]</h2>

<form asp-action="Checkout" method="post" novalidate>
    @Html.AntiForgeryToken()

    <!-- Step 1: Basic Info -->
    <div id="step1">
        <h4 class="mb-3">Basic Information</h4>

        <div class="mb-3">
            <label asp-for="FullName" class="form-label"></label>
            <input asp-for="FullName" class="form-control" required />
            <span asp-validation-for="FullName" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Email" class="form-label"></label>
            <input asp-for="Email" class="form-control" type="email" autocomplete="email" required />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Phone" class="form-label"></label>
            <div class="input-group">
                <select asp-for="CountryCode" asp-items="countryCodeList" class="form-select" style="max-width: 180px;" required>
                    <option value="">Select Country</option>
                </select>
                <input asp-for="Phone"
                       type="tel"
                       class="form-control"
                       placeholder="88 123 4567"
                       pattern="^\d[\d\s\-().]{7,}\d$"
                       title="Enter a valid phone number, e.g. 88 123 4567"
                       autocomplete="tel" required />
            </div>
            <span asp-validation-for="CountryCode" class="text-danger"></span>
            <span asp-validation-for="Phone" class="text-danger"></span>
            <small class="form-text text-muted">Format example: 88 123 4567</small>
        </div>

        <button type="button" id="continueBtn" class="btn btn-primary">Continue</button>
    </div>

    <!-- Step 2: Delivery & Order -->
    <div id="step2" style="display:none;">
        <h4 class="mb-3">Delivery & Location</h4>

        <div class="mb-3">
            <label asp-for="DeliveryOption" class="form-label">Delivery Option</label>
            <select asp-for="DeliveryOption" asp-items="deliveryOptionList" class="form-select" id="deliveryOptionSelect" required>
                <option value="">Select Delivery Option</option>
            </select>
            <span asp-validation-for="DeliveryOption" class="text-danger"></span>
        </div>

        <!-- Pickup Store (shown only if PickupFromStore selected) -->
        <div class="mb-3" id="storeSelectionDiv" style="display:none;">
            <label asp-for="PickupStoreId" class="form-label">Choose Pickup Store</label>
            <select asp-for="PickupStoreId" asp-items="storeList" class="form-select">
                <option value="">Select a store</option>
            </select>
            <span asp-validation-for="PickupStoreId" class="text-danger"></span>
        </div>

        <!-- Address fields (shown only if Courier selected) -->
        <div id="addressFields" style="display:none;">
            <div class="mb-3">
                <label asp-for="Address" class="form-label"></label>
                <input asp-for="Address" class="form-control" autocomplete="street-address" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="City" class="form-label"></label>
                <input asp-for="City" class="form-control" autocomplete="address-level2" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="ZipCode" class="form-label"></label>
                <input asp-for="ZipCode" class="form-control" autocomplete="postal-code" />
                <span asp-validation-for="ZipCode" class="text-danger"></span>
            </div>
        </div>

        <h4 class="mb-3 mt-4">Order Summary</h4>

        <div class="table-responsive shadow rounded">
            <table class="table align-middle mb-0 bg-white">
                <thead class="table-light">
                    <tr>
                        <th>Product</th>
                        <th>Image</th>
                        <th class="text-center">Quantity</th>
                        <th class="text-end">Unit Price</th>
                        <th class="text-end">Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>@item.ProductName</td>
                            <td>
                                <img src="@item.ProductImageUrl" alt="@item.ProductName" class="rounded" style="height: 50px; width: 50px; object-fit: cover;" />
                            </td>
                            <td class="text-center">@item.Quantity</td>
                            <td class="text-end">
                                @item.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("bg-BG"))
                                <br />
                                <small class="text-muted">
                                    @ConvertToEuro(item.Price).ToString("C", System.Globalization.CultureInfo.GetCultureInfo("fr-FR"))
                                </small>
                            </td>
                            <td class="text-end fw-semibold">
                                @item.Subtotal.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("bg-BG"))
                                <br />
                                <small class="text-muted">
                                    @ConvertToEuro(item.Subtotal).ToString("C", System.Globalization.CultureInfo.GetCultureInfo("fr-FR"))
                                </small>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="table-secondary fw-bold">
                        <td colspan="3"></td>
                        <td class="text-end">Total:</td>
                        <td class="text-end">
                            <div>@Model.Total.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("bg-BG"))</div>
                            <div><small class="text-muted">@ConvertToEuro(Model.Total).ToString("C", System.Globalization.CultureInfo.GetCultureInfo("fr-FR"))</small></div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <button type="submit" class="btn btn-success btn-lg w-100 mt-4">Place Order</button>
    </div>

</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Show step 2 only after validating step 1 basic info fields
        document.getElementById('continueBtn').addEventListener('click', function () {
            // Basic validation for required fields
            var fullName = document.querySelector('input[name="FullName"]');
            var email = document.querySelector('input[name="Email"]');
            var countryCode = document.querySelector('select[name="CountryCode"]');
            var phone = document.querySelector('input[name="Phone"]');

            var valid = true;
            [fullName, email, countryCode, phone].forEach(function (el) {
                if (!el.value.trim()) {
                    valid = false;
                    el.classList.add('is-invalid');
                } else {
                    el.classList.remove('is-invalid');
                }
            });

            if (!valid) {
                alert('Please fill in all required fields.');
                return;
            }

            // Hide step 1, show step 2
            document.getElementById('step1').style.display = 'none';
            document.getElementById('step2').style.display = 'block';
        });

        // Toggle Pickup Store or Address fields based on delivery option
        function toggleLocationFields() {
            var deliverySelect = document.getElementById('deliveryOptionSelect');
            var storeDiv = document.getElementById('storeSelectionDiv');
            var addressDiv = document.getElementById('addressFields');

            if (deliverySelect.value === '1') { // PickupFromStore enum value is 1
                storeDiv.style.display = 'block';
                addressDiv.style.display = 'none';
            } else if (deliverySelect.value === '2') { // Courier enum value is 2
                storeDiv.style.display = 'none';
                addressDiv.style.display = 'block';
            } else {
                storeDiv.style.display = 'none';
                addressDiv.style.display = 'none';
            }
        }

        document.getElementById('deliveryOptionSelect').addEventListener('change', toggleLocationFields);
        window.addEventListener('DOMContentLoaded', toggleLocationFields);
    </script>
}

@functions {
    private decimal ConvertToEuro(decimal amountInLev)
    {
        const decimal exchangeRate = 1.95583m;
        return decimal.Round(amountInLev / exchangeRate, 2);
    }
}