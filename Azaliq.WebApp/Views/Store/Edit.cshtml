@using Azaliq.Data.Models.Models.Enum  
@using Azaliq.Data.Models.Models.Enum.Phone
<!-- make sure this includes the extension method namespace -->
@model Azaliq.ViewModels.Store.EditStoreLocationInputModel

@{
    ViewData["Title"] = "Edit Store Location";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Edit" method="post" novalidate id="editStoreForm">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id"/>

    <div class="mb-3">
        <label asp-for="Name" class="form-label"></label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="GoogleMapsUrl" class="form-label"></label>
        <input asp-for="GoogleMapsUrl" class="form-control"/>
        <span asp-validation-for="GoogleMapsUrl" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Address" class="form-label"></label>
        <input asp-for="Address" class="form-control"/>
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>

    <div class="mb-3 d-flex align-items-center gap-2">
        <div>
            <label asp-for="CountryCode" class="form-label"></label>
            <select asp-for="CountryCode" class="form-select" style="width: 170px;">
                <option value="">-- Select Country Code --</option>
                @foreach (var pref in Enum.GetValues(typeof(CountryCode)).Cast<CountryCode>())
                {
                    <option value="@pref" selected="@(Model.CountryCode == pref ? "selected" : null)">
                        @pref.ToPhonePrefix() (@pref.ToString())
                    </option>
                }
            </select>
            <span asp-validation-for="CountryCode" class="text-danger"></span>
        </div>

        <div style="flex-grow: 1;">
            <label asp-for="Phone" class="form-label"></label>
            <input asp-for="Phone"
                   type="tel"
                   class="form-control"
                   placeholder="88 123 4567"
                   pattern="^(\d[\d\s\-().]{6,}\d)$"
                   title="Enter a valid phone number without country code, e.g. 88 123 4567"
                   autocomplete="tel"/>
            <span asp-validation-for="Phone" class="text-danger"></span>
            <span id="phoneError" class="text-danger" style="display:none;">Invalid phone number format</span>
        </div>
    </div>

    <button type="submit" class="btn btn-success">Save Changes</button>
    <a asp-action="Index" class="btn btn-secondary ms-2">Cancel</a>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        const form = document.getElementById('editStoreForm');
        const phoneInput = form.querySelector('input[name="Phone"]');
        const phoneError = document.getElementById('phoneError');
        const phonePattern = /^(\d[\d\s\-().]{6,}\d)$/;

        phoneInput.addEventListener('input', () => {
            if (phoneInput.value && !phonePattern.test(phoneInput.value)) {
                phoneError.style.display = 'inline';
            } else {
                phoneError.style.display = 'none';
            }
        });

        form.addEventListener('submit', (e) => {
            if (phoneInput.value && !phonePattern.test(phoneInput.value)) {
                e.preventDefault();  // stop form submission
                phoneError.style.display = 'inline';
                phoneInput.focus();
            }
        });
    </script>
}
